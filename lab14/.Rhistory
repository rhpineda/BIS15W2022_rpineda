superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
?clean_names
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
clean_superhero_info <- clean_names(superhero_info)
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
clean_superhero_info <- clean_names(superhero_info)
clean_superhero_info <- clean_names(superhero_info)
clean_superhero_info <- clean_names(superhero_info)
tibble(clean_superhero_info)
glimpse(clean_superhero_info)
View(clean_superhero_info)
clean_superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_boxplot(na.rm = TRUE)+
coord_flip()
clean_superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_boxplot(na.rm = TRUE)
clean_superhero_info %>%
filter(alignment != NA) %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_boxplot(na.rm = TRUE)
clean_superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_boxplot(na.rm = TRUE)
clean_superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_boxplot(na.rm = TRUE) +
geom_violin(alpha = .5, na.rm = TRUE)
#  ggplot(aes(x = island, y = body_mass_g, fill = island)) +
#  geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
#  geom_violin(alpha = .5, na.rm = TRUE) +
#  coord_flip()
clean_superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_boxplot(na.rm = TRUE, alpha = .3) +
geom_violin(alpha = .5, na.rm = TRUE)
#  ggplot(aes(x = island, y = body_mass_g, fill = island)) +
#  geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
#  geom_violin(alpha = .5, na.rm = TRUE) +
#  coord_flip()
clean_superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_violin(alpha = .5, na.rm = TRUE)
#You can see what the distributions look like
#Ex: two peaks for good guys
clean_superhero_info %>%
#filter(!is.na(alignment)) %>%
ggplot(aes(x = publisher, y = height, fill = publisher)) +
geom_boxplot(na.rm = TRUE, alpha = .5) +
geom_violin(alpha = .5, na.rm = TRUE)
clean_superhero_info %>%
#filter(!is.na(alignment)) %>%
ggplot(aes(x = hair_color, y = height, fill = hair_color)) +
geom_boxplot(na.rm = TRUE, alpha = .5) +
geom_violin(alpha = .5, na.rm = TRUE)
clean_superhero_info %>%
#filter(!is.na(alignment)) %>%
ggplot(aes(x = eye_color, y = height, fill = eye_color)) +
geom_boxplot(na.rm = TRUE, alpha = .5) +
geom_violin(alpha = .5, na.rm = TRUE)
clean_superhero_info %>%
#filter(!is.na(alignment)) %>%
ggplot(aes(x = gender, y = height, fill = gender)) +
geom_boxplot(na.rm = TRUE, alpha = .5) +
geom_violin(alpha = .5, na.rm = TRUE)
clean_superhero_info %>%
#filter(!is.na(alignment)) %>%
ggplot(aes(x = gender, y = height, fill = gender)) +
geom_boxplot(alpha = .5) +
geom_violin(alpha = .5)
clean_superhero_info %>%
#filter(!is.na(alignment)) %>%
ggplot(aes(x = gender, y = height, fill = gender)) +
geom_boxplot(na.rm = TRUE, alpha = .5) +
geom_violin(alpha = .5, na.rm = TRUE)
glimpse(beachbugs_long)
tibble(beachbugs_long)
beachbugs_long %>%
ggplot(aes( x = site, y = year, fill= buglevels)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red")
beachbugs_long %>%
ggplot(aes( x = year, y = site, fill= buglevels)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red")
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_w_max %>%
ggplot(aes( x = year, y = site, fill= buglevels)) +
geom_tile() +
scale_fill_gradient2(low="green", mid = "white", high="red")
beachbugs_normalized %>%
ggplot(aes( x = year, y = site, fill= buglevels)) +
geom_tile() +
scale_fill_gradient2(low="green", mid = "white", high="red")
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_normalized %>%
ggplot(aes( x = year, y = site, fill= norm_buglevel)) +
geom_tile() +
scale_fill_gradient2(low="green", mid = "white", high="red")
beachbugs_normalized %>%
ggplot(aes( x = year, y = site, fill= norm_buglevel)) +
geom_tile() +
scale_fill_gradient2(low="green", mid = "white", high="red")
beachbugs_w_max %>%
ggplot(aes( x = year, y = site, fill= buglevels)) +
geom_tile() +
scale_fill_gradient2(low="green", mid = "white", high="red")
# evil
evil_vec <- clean_superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eyes_vec <- clean_superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- clean_superhero_info %>%
filter(gender == "male")%>%
pull(name)
# bald
bald_vec <- clean_superhero_info %>%
filter(hair_color == "bald")%>%
pull(name)
# evil
evil_vec <- clean_superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eyes_vec <- clean_superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- clean_superhero_info %>%
filter(gender == "male")%>%
pull(name)
# bald
bald_vec <- clean_superhero_info %>%
filter(hair_color == "No hair")%>%
pull(name)
# evil
evil_vec <- clean_superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eyes_vec <- clean_superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- clean_superhero_info %>%
filter(gender == "male")%>%
pull(name)
# bald
bald_vec <- clean_superhero_info %>%
filter(hair_color == "No hair")%>%
pull(name)
# evil
evil_vec <- clean_superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eyes_vec <- clean_superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- clean_superhero_info %>%
filter(gender == "male")%>%
pull(name)
# bald
bald_vec <- clean_superhero_info %>%
filter(hair_color == "No hair")%>%
pull(name)
# evil
evil_vec <- clean_superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eyes_vec <- clean_superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- clean_superhero_info %>%
filter(gender == "male")%>%
pull(name)
# bald
bald_vec <- clean_superhero_info %>%
filter(hair_color == "No Hair")%>%
pull(name)
# evil
evil_vec <- clean_superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eyes_vec <- clean_superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- clean_superhero_info %>%
filter(gender == "Male")%>%
pull(name)
# bald
bald_vec <- clean_superhero_info %>%
filter(hair_color == "No Hair")%>%
pull(name)
evil_red_male_bald_list <- list(evil_vec, red_eyes_vec, male_vec, bald_vec)
# something like:
ggVennDiagram( evil_red_male_bald_list, category.names = c("Evil", "Red Eyes", "Male", "Bald"))
#DC comics
dc_vec <- clean_superhero_info %>%
filter(publisher == "DC Comics")%>%
pull(name)
# female
female_vec <- clean_superhero_info %>%
filter(gender == "Female")%>%
pull(name)
# Black hair
black_hair_vec <- clean_superhero_info %>%
filter(hair_color == "black")%>%
pull(name)
#DC comics
dc_vec <- clean_superhero_info %>%
filter(publisher == "DC Comics")%>%
pull(name)
# female
female_vec <- clean_superhero_info %>%
filter(gender == "Female")%>%
pull(name)
# Black hair
black_hair_vec <- clean_superhero_info %>%
filter(hair_color == "black")%>%
pull(name)
dc_female_black_hair_list <- list(dc_vec, female_vec, black_hair_vec)
ggVennDiagram( evil_red_male_bald_list, category.names = c("Evil", "Red Eyes", "Male", "Bald"))
ggVennDiagram(dc_female_black_hair_list, category.names = c("DC","Female", "Black Hair"))
#DC comics
dc_vec <- clean_superhero_info %>%
filter(publisher == "DC Comics")%>%
pull(name)
# female
female_vec <- clean_superhero_info %>%
filter(gender == "Female")%>%
pull(name)
# Black hair
black_hair_vec <- clean_superhero_info %>%
filter(hair_color == "Black")%>%
pull(name)
dc_female_black_hair_list <- list(dc_vec, female_vec, black_hair_vec)
ggVennDiagram(dc_female_black_hair_list, category.names = c("DC","Female", "Black Hair"))
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_frequency %>%
ggplot(aes(
label = power,
size = n,
color = power)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = n,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 30) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 50)
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 300)
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 5)
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10)
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_frequency %>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10)
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_frequency %>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10)
power_quantity %>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10)
